{"version":3,"sources":["redux/alert/alertSelectors.js","helpers/apiService.js","redux/session/sessionSelectors.js","redux/session/sessionAction.js","redux/contacts/contactsSelectors.js","components/shared/Section/Section.js","redux/contacts/contactsActions.js","components/ContactsList/ContactsListItem.js","components/shared/Notification/Notification.js","components/ContactsList/ContactsList.js","components/ContactsList/ContatctsListContainer.js","redux/contacts/contactsOperations.js","components/Filter/Filter.js","components/Filter/FilterContainer.js","components/shared/Form/Form.js","components/shared/Input/Input.js","components/shared/Button/Button.js","components/CreateContactForm/CreateContactForm.js","components/CreateContactForm/CreateContactFormContainer.js","pages/ContactsPage.js","pages/HomePage.js","components/LoginForm/LoginForm.js","components/LoginForm/LoginFormContainer.js","redux/session/sessionOperations.js","components/hoc/withAuthRedirect.js","pages/LoginPage.js","components/SignupForm/SignupForm.js","components/SignupForm/SignupFormContainer.js","pages/SignupPage.js","components/ProtectedRoute.js","components/NavBar/NavBar.js","components/UserProfile/UserProfile.js","components/Header/Header.js","components/Header/HeaderContainer.js","components/Alert/Alert.js","components/App/App.js","components/App/AppContainer.js","redux/contacts/contactsReducer.js","redux/alert/alertActions.js","redux/alert/alertReducer.js","redux/session/sessionReducer.js","helpers/Validation.js","redux/middleware/validation.js","redux/middleware/errorHandler.js","redux/store.js","components/Root.js","index.js","components/NavBar/NavBar.module.css","components/ContactsList/ContactsList.module.css","transitions/pop.module.css","components/UserProfile/UserProfile.module.css","components/App/App.module.css","transitions/slide-500ms.module.css","components/shared/Section/Section.module.css","transitions/slide.module.css","components/Filter/Filter.module.css","components/shared/Form/Form.module.css","components/shared/Button/Button.module.css","img/cat.jpg","components/Header/Header.module.css","components/Alert/Alert.module.css"],"names":["state","alert","fetch","axios","create","baseURL","timeout","setAuthToken","token","headers","auth","Authorization","getIsAuthenticated","session","authenticated","getToken","getUser","user","loginStart","createAction","loginSuccess","response","payload","loginError","error","message","meta","signupStart","signupSuccess","signupError","refreshUserStart","refreshUserSuccess","refreshUserError","logout","getContacts","contactsList","contacts","getContactsLength","length","getFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","Section","title","children","className","titleSection","loadContactsStart","loadContactsSuccess","loadContactsError","addContactValid","addContact","addContactStart","addContactSuccess","addContactError","deleteContactStart","deleteContactSuccess","id","deleteContactError","changeFilter","ContactsListItem","number","onDeleteContact","index","wrap","type","onClick","button","icon","Notification","ContactsList","onLoadContacts","this","props","TransitionGroup","component","list","map","CSSTransition","key","classNames","slideTransition","unmountOnExit","item","Component","mapDispatchToProps","dispatch","getState","delete","then","catch","get","data","connect","NumberFilter","value","onChangeFilter","onChange","placeholder","event","target","Filter","Form","onSubmit","form","Input","handleChange","holder","htmlFor","defaultProps","Button","CreateContactForm","setState","handleSubmit","preventDefault","onAddContact","contactsActions","count","in","popTransition","imgStyle","borderRadius","border","HomePage","src","cat","style","alt","width","height","LoginForm","email","password","onLogin","credentials","post","login","withAuthRedirect","BaseComponent","WithAuthRedirect","history","replace","location","from","SignupForm","onSignup","signup","redirectTo","rest","render","to","pathname","ativeStyle","color","fontWeight","NavBar","navigation","exact","activeStyle","link","UserProfile","onLogOut","profile","p","Header","header","PropTypes","shape","Alert","App","addTittle","refreshUser","isAlert","styles","container","slideTittleTransition","path","ContactsPage","LoginPage","SignUpPage","getAlert","createReducer","action","contactsListReducer","combineReducers","toShowAlert","toHideAlert","alertReducer","sessionReducer","INVALIDVALUE","notUnique","META","validSchema","validate","schema","errorTransform","checkUnique","details","incorrValue","some","savedContact","Joi","pattern","trim","required","validation","store","next","validateRes","Validation","alertMessage","alertActions","setTimeout","errorHandler","persistConfig","storage","whitelist","persistedReducer","persistReducer","configureStore","reducer","middleware","getDefaultMiddleware","persistor","persistStore","Root","loading","ReactDOM","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.0ac54562.chunk.js","sourcesContent":["export default state => state.alert;\n","import axios from 'axios';\n\nexport const fetch = axios.create({\n    baseURL: 'https://goit-phonebook-api.herokuapp.com',\n    timeout: 10000,\n});\n\nexport const setAuthToken = (token, headers) => {\n    const auth = { Authorization: `Bearer ${token}` };\n    const newHeaders = headers ? { ...auth, ...headers } : auth;\n    return { headers: newHeaders };\n};\n","export const getIsAuthenticated = state => state.session.authenticated;\n\nexport const getToken = state => state.session.token;\n\nexport const getUser = state => state.session.user;\n","import { createAction } from '@reduxjs/toolkit';\n\n// export const loginRequest = () => ({\n//     type: ActionType.LOGIN_REQUEST,\n// });\n\n// export const loginSuccess = response => ({\n//     type: ActionType.LOGIN_SUCCESS,\n//     payload: { response },\n// });\n\n// export const loginError = error => ({\n//     type: ActionType.LOGIN_ERROR,\n//     payload: { error },\n// });\n\nexport const loginStart = createAction('LOGIN/START');\n\nexport const loginSuccess = createAction('LOGIN/SUCCESS', response => ({\n    payload: { response },\n}));\n\nexport const loginError = createAction('LOGIN/ERROR', error => ({\n    payload: { message: error.message },\n    meta: { error: true },\n}));\n\nexport const signupStart = createAction('SIGNUP/START');\n\nexport const signupSuccess = createAction('SIGNUP/SUCCESS', response => ({\n    payload: { response },\n}));\n\nexport const signupError = createAction('SIGNUP/ERROR', error => ({\n    payload: { message: error.message },\n    meta: { error: true },\n}));\n\nexport const refreshUserStart = createAction('REFRESHUSER/START');\n\nexport const refreshUserSuccess = createAction('REFRESHUSER/SUCCESS', user => ({\n    payload: { user },\n}));\n\nexport const refreshUserError = createAction('REFRESHUSER/ERROR', error => ({\n    payload: { message: error.message },\n    meta: { error: true },\n}));\n\nexport const logout = createAction('LOGOUT');\n","import { createSelector } from 'reselect';\n\nexport const getContacts = state => state.contactsList.contacts;\n\nexport const getContactsLength = state => {\n    const { contacts } = state.contactsList;\n    if (!contacts) return 0;\n    return contacts.length;\n};\n\nexport const getFilter = state => state.contactsList.filter;\n\nexport const getFilteredContacts = createSelector(\n    [getContacts, getFilter],\n    (contacts, filter) => {\n        if (contacts.length <= 1) return contacts;\n        return contacts.filter(contact =>\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\n        );\n    },\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { titleSection } from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n    <section className={titleSection}>\n        <h2>{title}</h2>\n        {children}\n    </section>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const loadContactsStart = createAction('LOADCONTACTS/START');\n\nexport const loadContactsSuccess = createAction(\n    'LOADCONTACTS/SUCCESS',\n    contacts => ({\n        payload: { contacts },\n    }),\n);\n\nexport const loadContactsError = createAction('LOADCONTACTS/ERROR', error => ({\n    payload: { message: error.message },\n    meta: { error: true },\n}));\n\nexport const addContactValid = createAction('ADDCONTACT/START', contact => ({\n    payload: { contact },\n    meta: { addContact: true },\n}));\n\nexport const addContactStart = createAction('ADDCONTACT/START');\n\nexport const addContactSuccess = createAction(\n    'ADDCONTACT/SUCCESS',\n    contact => ({\n        payload: { contact },\n    }),\n);\n\nexport const addContactError = createAction('ADDCONTACT/ERROR', error => ({\n    payload: { message: error.message },\n    meta: { error: true },\n}));\n\nexport const deleteContactStart = createAction('DELETECONTACT/START');\n\nexport const deleteContactSuccess = createAction(\n    'DELETECONTACT/SUCCESS',\n    id => ({\n        payload: { id },\n    }),\n);\n\nexport const deleteContactError = createAction(\n    'DELETECONTACT/ERROR',\n    error => ({\n        payload: { message: error.message },\n        meta: { error: true },\n    }),\n);\n\nexport const changeFilter = createAction('CHANGEFILTER', filter => ({\n    payload: { filter },\n}));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { icon, button, wrap } from './ContactsList.module.css';\n\nfunction ContactsListItem({ name, number, onDeleteContact, index }) {\n    return (\n        <>\n            <div>\n                <span>\n                    {index}. {name}\n                </span>\n            </div>\n            <div className={wrap}>\n                <p>{number}</p>\n                <button\n                    type=\"button\"\n                    onClick={onDeleteContact}\n                    className={button}\n                >\n                    <i className={`${icon} material-icons`}>close</i>\n                </button>\n            </div>\n        </>\n    );\n}\n\nContactsListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n};\n\nexport default ContactsListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}!</p>;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport { list, item } from './ContactsList.module.css';\nimport ContactsListItem from './ContactsListItem';\nimport Notification from '../shared/Notification/Notification';\nimport slideTransition from '../../transitions/slide.module.css';\n\nexport default class ContactsList extends Component {\n    static propTypes = {\n        contacts: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.string.isRequired,\n                name: PropTypes.string.isRequired,\n                number: PropTypes.string.isRequired,\n            }),\n        ).isRequired,\n        onDeleteContact: PropTypes.func.isRequired,\n        onLoadContacts: PropTypes.func.isRequired,\n    };\n\n    componentDidMount() {\n        const { onLoadContacts } = this.props;\n        onLoadContacts();\n    }\n\n    render() {\n        const { contacts, onDeleteContact } = this.props;\n        return (\n            <>\n                {contacts.length > 0 ? (\n                    <TransitionGroup component=\"ul\" className={list}>\n                        {contacts.map(({ id, name, number }, index) => (\n                            <CSSTransition\n                                key={id}\n                                timeout={300}\n                                classNames={slideTransition}\n                                unmountOnExit\n                            >\n                                <li key={id} className={item}>\n                                    <ContactsListItem\n                                        index={index + 1}\n                                        name={name}\n                                        number={number}\n                                        onDeleteContact={() =>\n                                            onDeleteContact(id)\n                                        }\n                                    />\n                                </li>\n                            </CSSTransition>\n                        ))}\n                    </TransitionGroup>\n                ) : (\n                    <Notification message=\"Contacts for query not found\" />\n                )}\n            </>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport {\n    fetchContacts,\n    deleteContacts,\n} from '../../redux/contacts/contactsOperations';\nimport { getFilteredContacts } from '../../redux/contacts/contactsSelectors';\n\nimport ContactsList from './ContactsList';\n\nconst mapStateToProps = state => ({\n    contacts: getFilteredContacts(state),\n});\n\nconst mapDispatchToProps = {\n    onDeleteContact: deleteContacts,\n    onLoadContacts: fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\n","import { fetch, setAuthToken } from '../../helpers/apiService';\nimport { getToken } from '../session/sessionSelectors';\n\nimport {\n    loadContactsStart,\n    loadContactsSuccess,\n    loadContactsError,\n    addContactStart,\n    addContactSuccess,\n    addContactError,\n    deleteContactStart,\n    deleteContactSuccess,\n    deleteContactError,\n} from './contactsActions';\nconst prefix = '/contacts';\n\nexport const fetchContacts = () => (dispatch, getState) => {\n    const token = getToken(getState());\n    if (!token) {\n        return;\n    }\n\n    dispatch(loadContactsStart());\n\n    fetch\n        .get(prefix, setAuthToken(token))\n        .then(response => dispatch(loadContactsSuccess(response.data)))\n        .catch(error => dispatch(loadContactsError(error)));\n};\n\nexport const deleteContacts = id => (dispatch, getState) => {\n    const token = getToken(getState());\n    if (!token) {\n        return;\n    }\n\n    dispatch(deleteContactStart());\n\n    fetch\n        .delete(`${prefix}/${id}`, setAuthToken(token))\n        .then(() => dispatch(deleteContactSuccess(id)))\n        .catch(error => dispatch(deleteContactError(error)));\n};\n\nexport const addContact = contact => (dispatch, getState) => {\n    const token = getToken(getState());\n    if (!token) {\n        return;\n    }\n\n    dispatch(addContactStart());\n\n    fetch\n        .post(prefix, contact, setAuthToken(token))\n        .then(response => dispatch(addContactSuccess(response.data)))\n        .catch(error => dispatch(addContactError(error)));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { filter } from './Filter.module.css';\n\nconst NumberFilter = ({ value, onChangeFilter }) => (\n    <div className={filter}>\n        <p>Find contacts by name</p>\n        <input\n            type=\"text\"\n            value={value}\n            onChange={onChangeFilter}\n            placeholder=\"Enter name...\"\n        />\n    </div>\n);\n\nNumberFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default NumberFilter;\n","import { connect } from 'react-redux';\n\nimport { changeFilter } from '../../redux/contacts/contactsActions';\nimport { getFilter } from '../../redux/contacts/contactsSelectors';\n\nimport Filter from './Filter';\n\nconst mapStateToProps = state => ({\n    value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n    onChangeFilter: event => dispatch(changeFilter(event.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { form } from './Form.module.css';\n\nconst Form = ({ onSubmit, children }) => (\n    <form onSubmit={onSubmit} className={form}>\n        {children}\n    </form>\n);\n\nForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ title, handleChange, type, name, value, holder, id }) => (\n    <div>\n        <label htmlFor={id}>{title}</label>\n        <input\n            type={type}\n            placeholder={holder}\n            value={value}\n            onChange={handleChange}\n            name={name}\n            id={id}\n        />\n    </div>\n);\n\nInput.defaultProps = {\n    type: 'text',\n};\n\nInput.propTypes = {\n    title: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    value: PropTypes.string.isRequired,\n    holder: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    handleChange: PropTypes.func.isRequired,\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { button } from './Button.module.css';\n\nconst Button = ({ title }) => (\n    <button className={button} type=\"submit\">\n        {title}\n    </button>\n);\n\nButton.defaultProps = {\n    title: 'text',\n};\n\nButton.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from '../shared/Form/Form';\nimport Input from '../shared/Input/Input';\nimport Button from '../shared/Button/Button';\n\nexport default class CreateContactForm extends Component {\n    static propTypes = {\n        onAddContact: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onAddContact({ ...this.state });\n\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        const { name, number } = this.state;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Input\n                    title=\"Name\"\n                    handleChange={this.handleChange}\n                    name=\"name\"\n                    holder=\"Enter contact`s name\"\n                    id=\"name_input\"\n                    value={name}\n                />\n                <Input\n                    title=\"Number\"\n                    handleChange={this.handleChange}\n                    type=\"number\"\n                    name=\"number\"\n                    holder=\"Enter contact`s number\"\n                    id=\"number_input\"\n                    value={number}\n                />\n                <Button title=\"Add contact\" />\n            </Form>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport * as contactsActions from '../../redux/contacts/contactsActions';\nimport CreateContactForm from './CreateContactForm';\n\nconst mapDispatchToProps = dispatch => ({\n    onAddContact: contact => dispatch(contactsActions.addContactValid(contact)),\n});\n\nexport default connect(null, mapDispatchToProps)(CreateContactForm);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { getContactsLength } from '../redux/contacts/contactsSelectors';\n\nimport Section from '../components/shared/Section/Section';\nimport ContactsList from '../components/ContactsList/ContatctsListContainer';\nimport Filter from '../components/Filter/FilterContainer';\n\nimport CreateContactForm from '../components/CreateContactForm/CreateContactFormContainer';\n\nimport popTransition from '../transitions/pop.module.css';\n\nconst Home = ({ count }) => {\n    return (\n        <>\n            <Section title=\"\">\n                <CreateContactForm />\n            </Section>\n            <CSSTransition\n                in={count >= 2}\n                timeout={500}\n                classNames={popTransition}\n                unmountOnExit\n            >\n                <Section title=\"\">\n                    <Filter />\n                </Section>\n            </CSSTransition>\n            <Section title=\"\">\n                <ContactsList />\n            </Section>\n        </>\n    );\n};\n\nHome.propTypes = {\n    count: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    count: getContactsLength(state),\n});\n\nexport default connect(mapStateToProps, null)(Home);\n","import React from 'react';\n\nimport Section from '../components/shared/Section/Section';\nimport cat from '../img/cat.jpg';\n\nconst imgStyle = {\n    borderRadius: '5%',\n    border: '3px solid #000',\n};\nconst HomePage = () => (\n    <Section title=\"\">\n        <h1>Welcome to Phonebook</h1>\n\n        <img\n            src={cat}\n            style={{\n                ...imgStyle,\n            }}\n            alt=\"cat\"\n            width=\"400\"\n            height=\"400\"\n        />\n    </Section>\n);\n\nexport default HomePage;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from '../shared/Form/Form';\nimport Input from '../shared/Input/Input';\nimport Button from '../shared/Button/Button';\n\nexport default class LoginForm extends Component {\n    static propTypes = {\n        onLogin: PropTypes.func.isRequired,\n    };\n\n    state = {\n        email: '',\n        password: '',\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onLogin({ ...this.state });\n\n        this.setState({\n            email: '',\n            password: '',\n        });\n    };\n\n    render() {\n        const { email, password } = this.state;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Input\n                    title=\"Email\"\n                    handleChange={this.handleChange}\n                    type=\"email\"\n                    name=\"email\"\n                    holder=\"Enter your email\"\n                    id=\"email_input\"\n                    value={email}\n                />\n                <Input\n                    title=\"Password\"\n                    handleChange={this.handleChange}\n                    type=\"password\"\n                    name=\"password\"\n                    holder=\"Enter your password\"\n                    id=\"password_input\"\n                    value={password}\n                />\n                <Button title=\"Login\" />\n            </Form>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport { login } from '../../redux/session/sessionOperations';\nimport LoginForm from './LoginForm';\n\nconst mapDispatchToProps = dispatch => ({\n    onLogin: credentials => dispatch(login(credentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(LoginForm);\n","import { fetch, setAuthToken } from '../../helpers/apiService';\nimport { getToken } from './sessionSelectors';\n\nimport {\n    loginStart,\n    loginSuccess,\n    loginError,\n    signupStart,\n    signupSuccess,\n    signupError,\n    logout,\n    refreshUserStart,\n    refreshUserSuccess,\n    refreshUserError,\n} from './sessionAction';\n\nexport const login = credentials => dispatch => {\n    dispatch(loginStart());\n\n    fetch\n        .post('/users/login', credentials)\n        .then(response => dispatch(loginSuccess(response.data)))\n        .catch(error => dispatch(loginError(error)));\n};\n\nexport const signup = credentials => dispatch => {\n    dispatch(signupStart());\n\n    fetch\n        .post('/users/signup', credentials)\n        .then(response => dispatch(signupSuccess(response.data)))\n        .catch(error => dispatch(signupError(error)));\n};\n\nexport const logOut = () => (dispatch, getState) => {\n    dispatch(logout());\n    const token = getToken(getState());\n    if (!token) {\n        return;\n    }\n\n    fetch.post('/users/logout', setAuthToken(token));\n};\n\nexport const refreshUser = () => (dispatch, getState) => {\n    dispatch(refreshUserStart());\n    const token = getToken(getState());\n    if (!token) {\n        return;\n    }\n\n    fetch\n        .get('/users/current', setAuthToken(token))\n        .then(response => dispatch(refreshUserSuccess(response.data)))\n        .catch(error => dispatch(refreshUserError(error)));\n};\n\n// export const deleteContacts = id => dispatch => {\n//     dispatch(deleteContactStart());\n\n//     fetch\n//         .delete(`/${id}`)\n//         .then(() => dispatch(deleteContactSuccess(id)))\n//         .catch(error => dispatch(deleteContactError(error)));\n// };\n\n// export const addContact = contact => dispatch => {\n//     dispatch(addContactStart());\n\n//     fetch\n//         .post('', contact)\n//         .then(response => dispatch(addContactSuccess(response.data)))\n//         .catch(error => dispatch(addContactError(error)));\n// };\n\n// export const fetchContacts = () => dispatch => {\n//     dispatch(loadContactsStart());\n\n//     fetch\n//         .get()\n//         .then(response => dispatch(loadContactsSuccess(response.data)))\n//         .catch(error => dispatch(loadContactsError(error)));\n// };\n\n// export const deleteContacts = id => dispatch => {\n//     dispatch(deleteContactStart());\n\n//     fetch\n//         .delete(`/${id}`)\n//         .then(() => dispatch(deleteContactSuccess(id)))\n//         .catch(error => dispatch(deleteContactError(error)));\n// };\n\n// export const addContact = contact => dispatch => {\n//     dispatch(addContactStart());\n\n//     fetch\n//         .post('', contact)\n//         .then(response => dispatch(addContactSuccess(response.data)))\n//         .catch(error => dispatch(addContactError(error)));\n// };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/session/sessionSelectors';\n\nconst withAuthRedirect = BaseComponent => {\n    class WithAuthRedirect extends Component {\n        componentDidMount() {\n            const { authenticated, history } = this.props;\n\n            if (!authenticated) {\n                return;\n            }\n\n            history.replace('/');\n        }\n\n        componentDidUpdate() {\n            const { authenticated, history, location } = this.props;\n            if (!authenticated) {\n                return;\n            }\n\n            if (location.state && location.state.from) {\n                history.replace(location.state.from);\n\n                return;\n            }\n\n            history.replace('/');\n        }\n\n        render() {\n            return <BaseComponent {...this.props} />;\n        }\n    }\n\n    const mapStateToProps = state => ({\n        authenticated: getIsAuthenticated(state),\n    });\n\n    return connect(mapStateToProps)(WithAuthRedirect);\n};\n\nexport default withAuthRedirect;\n","import React from 'react';\n\nimport Section from '../components/shared/Section/Section';\nimport LoginForm from '../components/LoginForm/LoginFormContainer';\nimport withAuthRedirect from '../components/hoc/withAuthRedirect';\n\nconst LoginPage = () => (\n    <Section title=\"\">\n        <LoginForm />\n    </Section>\n);\n\nexport default withAuthRedirect(LoginPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Form from '../shared/Form/Form';\nimport Input from '../shared/Input/Input';\nimport Button from '../shared/Button/Button';\n\nexport default class SignupForm extends Component {\n    static propTypes = {\n        onSignup: PropTypes.func.isRequired,\n    };\n\n    state = {\n        name: '',\n        email: '',\n        password: '',\n    };\n\n    handleChange = event => {\n        this.setState({ [event.target.name]: event.target.value });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        this.props.onSignup({ ...this.state });\n\n        this.setState({\n            name: '',\n            email: '',\n            password: '',\n        });\n    };\n\n    render() {\n        const { name, email, password } = this.state;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n                <Input\n                    title=\"Name\"\n                    handleChange={this.handleChange}\n                    name=\"name\"\n                    holder=\"Enter your name\"\n                    id=\"name_input\"\n                    value={name}\n                />\n                <Input\n                    title=\"Email\"\n                    handleChange={this.handleChange}\n                    type=\"email\"\n                    name=\"email\"\n                    holder=\"Enter your email\"\n                    id=\"email_input\"\n                    value={email}\n                />\n                <Input\n                    title=\"Password\"\n                    handleChange={this.handleChange}\n                    type=\"password\"\n                    name=\"password\"\n                    holder=\"Enter your password\"\n                    id=\"password_input\"\n                    value={password}\n                />\n                <Button title=\"Sign Up\" />\n            </Form>\n        );\n    }\n}\n","import { connect } from 'react-redux';\nimport { signup } from '../../redux/session/sessionOperations';\nimport SignupForm from './SignupForm';\n\nconst mapDispatchToProps = dispatch => ({\n    onSignup: credentials => dispatch(signup(credentials)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignupForm);\n","import React from 'react';\n\nimport Section from '../components/shared/Section/Section';\nimport SignupForm from '../components/SignupForm/SignupFormContainer';\nimport withAuthRedirect from '../components/hoc/withAuthRedirect';\n\nconst SignupPage = () => (\n    <Section title=\"\">\n        <SignupForm />\n    </Section>\n);\n\nexport default withAuthRedirect(SignupPage);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/session/sessionSelectors';\n\nconst ProtectedRoute = ({\n    authenticated,\n    redirectTo = '/',\n    component: Component,\n    ...rest\n}) => (\n    <Route\n        {...rest}\n        render={props =>\n            authenticated ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: redirectTo,\n                        state: { from: props.location },\n                    }}\n                />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    authenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n\nimport { list, navigation, link, item } from './NavBar.module.css';\n\nconst ativeStyle = {\n    color: '#0039d4',\n    fontWeight: 'bold',\n};\n\nconst NavBar = ({ auth }) => (\n    <nav className={navigation}>\n        <ul className={list}>\n            <li className={item}>\n                <NavLink to=\"/\" exact activeStyle={ativeStyle} className={link}>\n                    Home\n                </NavLink>\n            </li>\n\n            {auth && (\n                <>\n                    <li className={item}>\n                        <NavLink\n                            to=\"/contacts\"\n                            exact\n                            activeStyle={ativeStyle}\n                            className={link}\n                        >\n                            Contacts\n                        </NavLink>\n                    </li>\n                </>\n            )}\n            {!auth && (\n                <>\n                    <li className={item}>\n                        <NavLink\n                            to=\"/login\"\n                            exact\n                            activeStyle={ativeStyle}\n                            className={link}\n                        >\n                            Login\n                        </NavLink>\n                    </li>\n                    <li className={item}>\n                        <NavLink\n                            to=\"/register\"\n                            exact\n                            activeStyle={ativeStyle}\n                            className={link}\n                        >\n                            Sign up\n                        </NavLink>\n                    </li>\n                </>\n            )}\n        </ul>\n    </nav>\n);\n\nNavBar.propTypes = {\n    auth: PropTypes.bool.isRequired,\n};\n\nexport default NavBar;\n","import React from 'react';\n// import Button from './shared/Button';\n\nimport { profile, p, button } from './UserProfile.module.css';\n\nconst UserProfile = ({ user, onLogOut }) => {\n    return (\n        <div className={profile}>\n            <p className={p}>{user.email}</p>\n            <button className={button} type=\"button\" onClick={onLogOut}>\n                Log Out\n            </button>\n        </div>\n    );\n};\n\nexport default UserProfile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { header } from './Header.module.css';\nimport NavBar from '../NavBar/NavBar';\nimport UserProfile from '../UserProfile/UserProfile';\n\nconst Header = ({ user, authenticated, onLogOut }) => (\n    <header className={header}>\n        <NavBar auth={authenticated} />\n        {authenticated && <UserProfile user={user} onLogOut={onLogOut} />}\n    </header>\n);\n\nHeader.defaultProps = {\n    user: PropTypes.shape({\n        name: 'name',\n        email: 'email',\n    }),\n};\n\nHeader.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string,\n        email: PropTypes.string,\n    }),\n    authenticated: PropTypes.bool.isRequired,\n    onLogOut: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import { connect } from 'react-redux';\nimport { logOut } from '../../redux/session/sessionOperations';\n\nimport {\n    getUser,\n    getIsAuthenticated,\n} from '../../redux/session/sessionSelectors';\nimport Header from './Header';\n\nconst mapStateToProps = state => ({\n    user: getUser(state),\n    authenticated: getIsAuthenticated(state),\n});\n\nconst mapDispatchToProps = {\n    onLogOut: logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { p } from './Alert.module.css';\n\nconst Alert = ({ message }) => <p className={p}>{message}!</p>;\n\nAlert.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport styles from './App.module.css';\nimport slideTittleTransition from '../../transitions/slide-500ms.module.css';\nimport popTransition from '../../transitions/pop.module.css';\n\n// Pages\nimport ContactsPage from '../../pages/ContactsPage';\nimport HomePage from '../../pages/HomePage';\nimport LoginPage from '../../pages/LoginPage';\nimport SignUpPage from '../../pages/SignupPage';\n\nimport ProtectedRoute from '../ProtectedRoute';\nimport Header from '../Header/HeaderContainer';\nimport Alert from '../Alert/Alert';\n\nexport default class App extends Component {\n    static propTypes = {\n        alert: PropTypes.string.isRequired,\n        refreshUser: PropTypes.func.isRequired,\n    };\n\n    state = {\n        addTittle: false,\n    };\n\n    componentDidMount() {\n        const { refreshUser } = this.props;\n        refreshUser();\n\n        this.setState({\n            addTittle: true,\n        });\n    }\n\n    render() {\n        const { addTittle } = this.state;\n        const { alert } = this.props;\n        const isAlert = !!alert;\n\n        return (\n            <div className={styles.container}>\n                <CSSTransition\n                    in={addTittle}\n                    timeout={500}\n                    classNames={slideTittleTransition}\n                    unmountOnExit\n                >\n                    <h1>Phonebook</h1>\n                </CSSTransition>\n                <Header />\n                <Switch>\n                    <ProtectedRoute\n                        path=\"/contacts\"\n                        component={ContactsPage}\n                        redirectTo=\"/login\"\n                    />\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/login\" component={LoginPage} />\n                    <Route path=\"/register\" component={SignUpPage} />\n                    <Redirect to=\"/\" />\n                </Switch>\n                <CSSTransition\n                    in={isAlert}\n                    timeout={300}\n                    classNames={popTransition}\n                    unmountOnExit\n                >\n                    <Alert message={alert} />\n                </CSSTransition>\n            </div>\n        );\n    }\n}\n","import { connect } from 'react-redux';\n\nimport getAlert from '../../redux/alert/alertSelectors';\nimport { refreshUser } from '../../redux/session/sessionOperations';\n\nimport App from './App';\n\nconst mapStateToProps = state => ({\n    alert: getAlert(state),\n});\n\nconst mapDispatchToProps = {\n    refreshUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n    deleteContactSuccess,\n    loadContactsSuccess,\n    changeFilter,\n    addContactSuccess,\n} from './contactsActions';\n\nimport { logout } from '../session/sessionAction';\n\nconst contacts = createReducer([], {\n    [loadContactsSuccess]: (state, action) => action.payload.contacts,\n    [addContactSuccess]: (state, action) => [...state, action.payload.contact],\n    [deleteContactSuccess]: (state, action) =>\n        state.filter(({ id }) => id !== action.payload.id),\n    [logout]: () => [],\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (state, action) => action.payload.filter,\n    [deleteContactSuccess]: () => '',\n    [logout]: () => '',\n});\n\nconst contactsListReducer = combineReducers({\n    contacts,\n    filter,\n});\n\nexport default contactsListReducer;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const toShowAlert = createAction('SHOWALERT', message => ({\n    payload: { message },\n}));\nexport const toHideAlert = createAction('HIDEALERT');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { toHideAlert, toShowAlert } from './alertActions';\n\nconst alertReducer = createReducer('', {\n    [toShowAlert]: (state, action) => action.payload.message,\n    [toHideAlert]: () => '',\n});\n\nexport default alertReducer;\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n    loginSuccess,\n    signupSuccess,\n    logout,\n    refreshUserSuccess,\n} from './sessionAction';\n\nconst user = createReducer(null, {\n    [loginSuccess]: (state, action) => action.payload.response.user,\n    [signupSuccess]: (state, action) => action.payload.response.user,\n    [refreshUserSuccess]: (state, action) => action.payload.user,\n    [logout]: () => null,\n});\nconst authenticated = createReducer(false, {\n    [loginSuccess]: () => true,\n    [signupSuccess]: () => true,\n    [refreshUserSuccess]: () => true,\n    [logout]: () => false,\n});\nconst token = createReducer(null, {\n    [loginSuccess]: (state, action) => action.payload.response.token,\n    [signupSuccess]: (state, action) => action.payload.response.token,\n    [logout]: () => null,\n});\n\nconst sessionReducer = combineReducers({\n    user,\n    authenticated,\n    token,\n});\n\nexport default sessionReducer;\n","import * as Joi from '@hapi/joi';\n\nconst INVALIDVALUE = {\n    name:\n        'The name must contain only the letters a-z, A-C and a space, with length from 3 to 20 characters',\n    number:\n        'The number must contain only integers from 0-9, 10 characters long',\n    notUnique: 'Contact already exist!',\n};\n\nexport const META = {\n    error: 'error',\n    success: 'success',\n};\n\nconst schema = Joi.object({\n    name: Joi.string()\n        .pattern(/^[a-zA-Z ]{3,20}$/)\n        .trim()\n        .required(),\n    number: Joi.string()\n        .pattern(/^[0-9]{10}$/)\n        .required(),\n});\n\nclass Validation {\n    constructor(validSchema) {\n        this.schema = validSchema;\n    }\n\n    validate = (contacts, contact) => {\n        const { error, value } = this.schema.validate(contact);\n        if (error) {\n            return this.errorTransform(error);\n        }\n\n        const isUniqueName = this.checkUnique(contacts, contact);\n        if (isUniqueName) {\n            return { message: INVALIDVALUE.notUnique, meta: META.error };\n        }\n\n        return { contact: value, meta: META.success };\n    };\n\n    errorTransform = error => {\n        if (error.details[0].type === 'string.empty') {\n            return { message: error.message, meta: META.error };\n        }\n        const incorrValue = error.details[0].path[0];\n\n        return { message: INVALIDVALUE[incorrValue], meta: META.error };\n    };\n\n    checkUnique = (contacts, contact) => {\n        return contacts.some(\n            savedContact =>\n                savedContact.name.toLowerCase() === contact.name.toLowerCase(),\n        );\n    };\n}\n\nexport default new Validation(schema);\n","import * as alertActions from '../alert/alertActions';\nimport { addContact } from '../contacts/contactsOperations';\nimport Validation, { META } from '../../helpers/Validation';\nimport { getContacts } from '../contacts/contactsSelectors';\n\nconst validation = store => next => action => {\n    if (action.meta && action.meta.addContact) {\n        const state = store.getState();\n        const contacts = getContacts(state);\n        const { contact } = action.payload;\n        const validateRes = Validation.validate(contacts, contact);\n        if (validateRes.meta === META.success) {\n            store.dispatch(addContact(validateRes.contact));\n        }\n        const alertMessage = validateRes.message ? validateRes.message : '';\n\n        store.dispatch(alertActions.toShowAlert(alertMessage));\n\n        setTimeout(() => {\n            store.dispatch(alertActions.toHideAlert());\n        }, 3000);\n        return;\n    }\n\n    next(action);\n};\n\nexport default validation;\n","import * as alertActions from '../alert/alertActions';\n\nconst errorHandler = store => next => action => {\n    if (action.meta && action.meta.error) {\n        store.dispatch(alertActions.toShowAlert(action.payload.message));\n\n        setTimeout(() => {\n            store.dispatch(alertActions.toHideAlert());\n        }, 3000);\n        return;\n    }\n\n    next(action);\n};\n\nexport default errorHandler;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport contactsListReducer from './contacts/contactsReducer';\nimport alertReducer from './alert/alertReducer';\nimport sessionReducer from './session/sessionReducer';\n\nimport validation from './middleware/validation';\nimport errorHandler from './middleware/errorHandler';\n\nconst persistConfig = {\n    key: 'session',\n    storage,\n    whitelist: ['token'],\n};\n\nconst persistedReducer = persistReducer(persistConfig, sessionReducer);\n\nexport const store = configureStore({\n    reducer: {\n        contactsList: contactsListReducer,\n        alert: alertReducer,\n        session: persistedReducer,\n    },\n    middleware: [...getDefaultMiddleware(), errorHandler, validation],\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport App from './App/AppContainer';\nimport { store, persistor } from '../redux/store';\n\nconst Root = () => (\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Router>\n                <Route component={App} />\n            </Router>\n        </PersistGate>\n    </Provider>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Root from './components/Root';\n\nimport 'material-design-icons/iconfont/material-icons.css';\n\nReactDOM.render(<Root />, document.querySelector('#root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"NavBar_navigation__224c5\",\"list\":\"NavBar_list__3gaWA\",\"item\":\"NavBar_item__2RAQQ\",\"link\":\"NavBar_link__2Iixg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__2RiYd\",\"item\":\"ContactsList_item__2O7n3\",\"wrap\":\"ContactsList_wrap__2wfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__1NM7x\",\"enterActive\":\"pop_enterActive__1Bhql\",\"exit\":\"pop_exit__1_phz\",\"exitActive\":\"pop_exitActive__3xbz2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1Nk0d\",\"p\":\"UserProfile_p__35jbH\",\"button\":\"UserProfile_button__1EmYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__16xz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide-500ms_enter__3KjJC\",\"enterActive\":\"slide-500ms_enterActive__1PUSQ\",\"exit\":\"slide-500ms_exit__Yd33a\",\"exitActive\":\"slide-500ms_exitActive__3BQFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleSection\":\"Section_titleSection__TWUIr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__BLs75\",\"enterActive\":\"slide_enterActive__2XArv\",\"exit\":\"slide_exit__2XvOt\",\"exitActive\":\"slide_exitActive__3LNYO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__z9cgu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1RwfN\"};","module.exports = __webpack_public_path__ + \"static/media/cat.d8991c69.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p\":\"Alert_p__3pTNQ\"};"],"sourceRoot":""}